Starting audit...
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\App.java:105:32: Parameter currentPage should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\App.java:110:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\App.java:122:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\App.java:125:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\App.java:125:30: Parameter request should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\App.java:129:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\database\Database.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\database\Database.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\database\Database.java:88:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\features\auth\FilterFeature.java:51:5: Class 'FilterFeature' looks like designed for extension (can be subclassed), but the method 'compare' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterFeature' final or making the method 'compare' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\features\auth\FilterFeature.java:52:24: Parameter o1 should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\features\auth\FilterFeature.java:52:34: Parameter o2 should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\features\auth\PurchaseFeature.java:25: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:22:5: Class 'History' looks like designed for extension (can be subclassed), but the method 'undo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'History' final or making the method 'undo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:32:5: Class 'History' looks like designed for extension (can be subclassed), but the method 'add' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'History' final or making the method 'add' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:41:5: Class 'History' looks like designed for extension (can be subclassed), but the method 'printHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'History' final or making the method 'printHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:41:30: Parameter requestToCp should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:41:51: Parameter mes should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:42:31: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:47:5: Class 'History' looks like designed for extension (can be subclassed), but the method 'size' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'History' final or making the method 'size' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:51:5: Class 'History' looks like designed for extension (can be subclassed), but the method 'peek' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'History' final or making the method 'peek' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\history\History.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\pages\Page.java:25:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'containsNextPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'containsNextPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\pages\Page.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\pages\Page.java:29:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'containsFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'containsFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\pages\Page.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\BackStrategy.java:12:5: Class 'BackStrategy' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BackStrategy' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\ChangePageStrategy.java:11:31: Parameter request should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\DatabaseStrategy.java:13:26: Name 'ADD' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\DatabaseStrategy.java:14:26: Name 'DELETE' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\DatabaseStrategy.java:16:29: Parameter request should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\DatabaseStrategy.java:20:5: Class 'DatabaseStrategy' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DatabaseStrategy' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\DatabaseStrategy.java:38:71: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\DatabaseStrategy.java:39: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\DatabaseStrategy.java:53: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\OnPageStrategy.java:13:27: Parameter request should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\OnPageStrategy.java:17:5: Class 'OnPageStrategy' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OnPageStrategy' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\SubscribeStrategy.java:14:30: Parameter request should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\SubscribeStrategy.java:18:5: Class 'SubscribeStrategy' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SubscribeStrategy' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\strategy\SubscribeStrategy.java:28: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\Strategy.java:8:21: Parameter request should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\Strategy.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\StrategyFactory.java:3:31: Using the '.*' form of import should be avoided - app.strategies.strategy.*. [AvoidStarImport]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\StrategyFactory.java:8:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\StrategyFactory.java:17:22: Parameter s should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\app\strategies\StrategyFactory.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreManager.java:16:5: Class 'GenreManager' looks like designed for extension (can be subclassed), but the method 'subscribe' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenreManager' final or making the method 'subscribe' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreManager.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreManager.java:16:30: Parameter subscriber should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreManager.java:19: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreManager.java:20:5: Class 'GenreManager' looks like designed for extension (can be subclassed), but the method 'notifySubscribers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenreManager' final or making the method 'notifySubscribers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreManager.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreManager.java:24: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreManager.java:33:5: Class 'GenreManager' looks like designed for extension (can be subclassed), but the method 'containsSubscriber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenreManager' final or making the method 'containsSubscriber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreManager.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreManager.java:33:39: Parameter subscriber should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\genre\GenreSubscriber.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\movie\Movie.java:51:27: Parameter o should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\movie\Movie.java:52:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\movie\Movie.java:53:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\movie\MovieRecommendation.java:6:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\movie\MovieRecommendation.java:10:32: Parameter likedMovies should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\movie\MovieRecommendation.java:15:28: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\user\account\Premium.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\user\account\Premium.java:4:18: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\user\account\Premium.java:5:18: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\user\account\Premium.java:6:18: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\user\account\Standard.java:3:1: interfaces should describe a type and hence have methods. [InterfaceIsType]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\user\User.java:89:24: Parameter notification should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\user\User.java:93:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\components\user\User.java:96: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\io\input\action\Request.java:27:5: Class 'Request' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Request' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\io\input\action\Request.java:29:27: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\io\input\action\Request.java:30:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\io\input\action\Request.java:31:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\io\input\action\Request.java:32:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\io\output\response\Response.java:45:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\Main.java:17:38: Parameter path should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\Main.java:19:72: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\Main.java:26:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\Test.java:158: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\Test.java:206:65: Parameter testFileName should be final. [FinalParameters]
[ERROR] C:\Users\corne\Dev\IdeaProjects\streaming-service-backend\.\src\Test.java:222: Line is longer than 100 characters (found 108). [LineLength]
Audit done.
Checkstyle ends with 89 errors.
